extends "res://Scripts/Generic.gd"

#DEBUG
var DEBUG_OHHELLNO = false

var fnfMap = [
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	"     .  ",
	"      . ",
	"       .",
	"    .   ",
	
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
	" .      ",
	"  .     ",
	"   .    ",
	".       ",
]
var bpm = 170.
var offset = 384.

var scrollSpeed = 1.69

var arrows = [[],[],[],[], [],[],[],[]]
var time = 0.

var bfLastHitTime = 0.
var vsLastHitTime = 0.

func deleteArrow(arrow):
	arrow.obj.queue_free()
	arrow.hit = true

func checkHit(arrow):
	if not arrow.hit and abs(time - arrow.pos) < 100.:
		deleteArrow(arrow)
		return true

func _ready():
	#Create hit points
	for i in 8:
		var key = i % 4
		var arr = createArrow(key * 200. + (180. if i < 4 else 1140.), 120., arrowRots[key], 0.667, Color(0.167, 0.167, 0.167), self)
		arr.z_index = -2
	
	#Load Song
	for j in range(len(fnfMap)):
		for i in 8:
			if fnfMap[j][i] != " ":
				var key = i % 4
				arrows[i].append(Global.newArrow(false, i, (j + offset) * 7500. / bpm,
					createArrow(key * 200. - 300., (j + offset) * 7500. / bpm * scrollSpeed, arrowRots[key], 0.667, globalUIColour(Global.fnfHues[key]), $Arrows/ArrowsVS if i < 4 else $Arrows/ArrowsBF)
				))

func _process(delta):
	#Finish
	if not $Music.playing or DEBUG_OHHELLNO:
		loadScene("cutscene", self)
	
	# # scrollSpeed = 1.6 + sin(time / 32.) / 32. #これはちょっと楽しいネ?
	
	#Miss
	for key in 4:
		for j in range(len(arrows[key + 4])):
			var cur = arrows[key + 4][j]
			if not cur.hit and cur.pos <= time - 100.:
				deleteArrow(cur)
	
	#VS hit
	for key in 4:
		for j in range(len(arrows[key])):
			var cur = arrows[key][j]
			if not cur.hit and cur.pos <= time:
				$Shidass.frame = key + 4
				vsLastHitTime = time
				deleteArrow(cur)
	
	#Reset VS anim
	if time - vsLastHitTime > 750.:
		$Shidass.frame = 0
	#Reset BF anim
	if time - bfLastHitTime > 750.:
		$BF.frame = 0
	
	#Time & scroll
	$Arrows.position.y = time * -scrollSpeed + 120.
	time += delta * 1000.

func _input(e):
	for key in 4:
		for j in range(len(arrows[key + 4])):
			if e is InputEventKey and Input.is_key_pressed(OS.find_keycode_from_string(Global.fnfKeybinds1[key])) or Input.is_key_pressed(Global.fnfKeybinds2[key]) and e.is_pressed() and not e.echo:
				#Anim
				$BF.frame = key + 4
				bfLastHitTime = time
				
				if checkHit(arrows[key + 4][j]):
					break
